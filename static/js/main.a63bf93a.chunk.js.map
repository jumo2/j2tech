{"version":3,"sources":["Header.js","Footer.js","data/sectionContent.js","Form.js","Sections.js","App.js","serviceWorker.js","index.js"],"names":["Header","Jumbotron","className","animateIn","animateOut","Footer","sections","tagline","title","body","web","automation","data","quote","ContactForm","props","state","name","email","message","e","preventDefault","fetch","method","JSON","stringify","this","headers","then","response","alert","resetForm","value","Alert","varient","show","setState","Row","Col","lg","Form","id","onSubmit","handleSubmit","bind","Group","Label","htmlFor","Control","type","onChange","onNameChange","onEmailChange","as","onMessageChange","Button","size","event","target","React","Component","BlueSection","WhiteColSection","align","Sections","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"4QAsBeA,MAff,WACI,OACI,kBAACC,EAAA,EAAD,CAAWC,UAAU,gBACjB,yBAAKA,UAAU,mCACf,kBAAC,IAAD,CAAiBC,UAAU,oBAAoBC,WAAW,wBAC1D,wBAAIF,UAAU,uCAAd,qBCDGG,MATf,WACI,OACI,yBAAKH,UAAU,gBACX,uBAAGA,UAAU,iCAAb,uC,eCkBGI,EAvBA,CACXC,QAAS,CACLC,MAAO,kCACPC,KAAM,yRAEVC,IAAK,CACDF,MAAO,sBACPC,KAAM,gGAEVE,WAAY,CACRH,MAAO,qBACPC,KAAM,8IAEVG,KAAM,CACFJ,MAAO,eACPC,KAAM,4NAEVI,MAAO,CACHL,MAAO,kBACPC,KAAM,K,uDC8ICK,E,kDAnJX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,IACNC,MAAO,IACPC,QAAS,KALE,E,yDAWNC,GAAG,IAAD,OACXA,EAAEC,iBAEDC,MAAM,+DAAgE,CACnEC,OAAQ,OACRd,KAAMe,KAAKC,UAAUC,KAAKV,OAC1BW,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,YAAa,8CAElBC,MACC,SAACC,GACGC,MAAM,iBACN,EAAKC,iB,mCAOJC,GACT,OACQ,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUC,MAAM,GAA/B,Q,kCAMRT,KAAKU,SAAS,CAACnB,KAAM,IAAKC,MAAO,IAAKC,QAAS,Q,+BAI/C,OACI,kBAAClB,EAAA,EAAD,CAAWC,UAAU,sCACrB,kBAACmC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAiBnC,UAAU,uBACvB,wBAAID,UAAU,gCAAd,cAKR,kBAACoC,EAAA,EAAD,CAAKC,IAAI,GACL,kBAAC,IAAD,CAAiBpC,UAAU,wBACvC,kBAACqC,EAAA,EAAD,CAAMC,GAAG,eAAeC,SAAUhB,KAAKiB,aAAaC,KAAKlB,MAAOH,OAAO,QACnE,kBAACiB,EAAA,EAAKK,MAAN,KACI,kBAACL,EAAA,EAAKH,IAAN,KACI,kBAACG,EAAA,EAAKM,MAAN,CAAYC,QAAQ,aAApB,QACA,kBAACP,EAAA,EAAKQ,QAAN,CAAeC,KAAK,OAAOR,GAAG,YAAYT,MAAON,KAAKV,MAAMC,KAAMiC,SAAUxB,KAAKyB,aAAaP,KAAKlB,UAG3G,kBAACc,EAAA,EAAKK,MAAN,KACI,kBAACL,EAAA,EAAKH,IAAN,KACI,kBAACG,EAAA,EAAKM,MAAN,CAAYC,QAAQ,cAApB,SACA,kBAACP,EAAA,EAAKQ,QAAN,CAAeC,KAAK,QAAQR,GAAG,aAAaT,MAAON,KAAKV,MAAME,MAAOgC,SAAUxB,KAAK0B,cAAcR,KAAKlB,UAG/G,kBAACc,EAAA,EAAKK,MAAN,KACI,kBAACL,EAAA,EAAKH,IAAN,KACI,kBAACG,EAAA,EAAKM,MAAN,CAAYC,QAAQ,gBAApB,WACA,kBAACP,EAAA,EAAKQ,QAAN,CAAcK,GAAG,WAAWZ,GAAG,eAAeT,MAAON,KAAKV,MAAMG,QAAS+B,SAAUxB,KAAK4B,gBAAgBV,KAAKlB,UAGrH,kBAACc,EAAA,EAAKH,IAAN,KACA,kBAACkB,EAAA,EAAD,CAAQrD,UAAU,gBAAgB+C,KAAK,SAASO,KAAK,MAArD,gB,mCAUKC,GACT/B,KAAKU,SAAS,CAACnB,KAAMwC,EAAMC,OAAO1B,U,oCAGxByB,GACV/B,KAAKU,SAAS,CAAClB,MAAOuC,EAAMC,OAAO1B,U,sCAGvByB,GACZ/B,KAAKU,SAAS,CAACjB,QAASsC,EAAMC,OAAO1B,Y,GAhGnB2B,IAAMC,WCJ1BC,EAAc,SAAC,GAAmB,IAAlBrD,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACzB,OACI,kBAACR,EAAA,EAAD,CAAWC,UAAU,gBACjB,kBAAC,IAAD,CAAiBC,UAAU,uBAC3B,wBAAID,UAAU,qBACTM,IAGL,kBAAC,IAAD,CAAiBL,UAAU,qBAC3B,2BACKM,MAOXqD,EAAkB,SAAC,GAAmB,IAAlBtD,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KAC7B,OACI,kBAACR,EAAA,EAAD,CAAWC,UAAU,0BACjB,kBAACmC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAiBnC,UAAU,uBACvB,wBAAID,UAAU,gCACTM,KAIb,kBAAC8B,EAAA,EAAD,CAAKC,IAAI,GACL,kBAAC,IAAD,CAAiBpC,UAAU,wBACvB,uBAAGD,UAAU,cAAc6D,MAAM,QAC5BtD,QAsBduD,MAbf,WACI,OACI,oCACA,kBAAC,EAAD,CAAiBxD,MAAOF,EAASC,QAAQC,MAAOC,KAAMH,EAASC,QAAQE,OACvE,kBAAC,EAAD,CAAaD,MAAOF,EAASI,IAAIF,MAAOC,KAAMH,EAASI,IAAID,OAC3D,kBAAC,EAAD,CAAiBD,MAAOF,EAASK,WAAWH,MAAOC,KAAMH,EAASK,WAAWF,OAC7E,kBAAC,EAAD,CAAaD,MAAOF,EAASM,KAAKJ,MAAOC,KAAMH,EAASM,KAAKH,OAE7D,kBAAC,EAAD,QCzCOwD,EARH,kBACX,oCACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAkBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlD,MAAK,SAAAmD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM/D,c","file":"static/js/main.a63bf93a.chunk.js","sourcesContent":["import React from 'react';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport \"animate.css\";\n\nimport './App.css'\n\nfunction Header() {\n    return (\n        <Jumbotron className=\"App-header-2\">\n            <div className=\"jumboText form-row text-center \">\n            <ScrollAnimation animateIn='animate__fadeInUp' animateOut=\"animate__fadeOutDown\">\n            <h1 className=\"display-3 text-center brand mx-auto\"> &lt; j2Tech  /&gt;</h1>\n            </ScrollAnimation>\n            </div>\n        </Jumbotron>\n\n    );\n}\n\n\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <div className=\"container-sm\">\n            <p className=\"muted text-center p-text-blue\">Â© J2 Technology Solutions 2020\n            </p>\n        </div>\n    );\n}\n\nexport default Footer;","let sections = {\n    tagline: {\n        title: \"Leverage the power of the cloud\",\n        body: \"Small businesses do not have the resources or budget to develop custom software. By leveraging new technologies such as cloud computing, I can bring low cost solutions to your business, leading to a first class customer experience and competative advantage in the market place.\"\n    },\n    web: {\n        title: \"Website Development\",\n        body: \"Make a good first impression on potential customers with a professionally developed website.\",\n    },\n    automation: {\n        title: \"Process Automation\",\n        body: \"Are you spending a lot of time on manual repetative tasks? Let's automate that work load so you can focus on what matters, your customers.\"\n    },\n    data: {\n        title: \"Data Storage\",\n        body: \"Does the thought of losing all your important business data due to a faulty hard drive keep you up at night? I can offer low cost data storage with built in redundency to ensure you never lose whats important to you.\"\n    },\n    quote: {\n        title: \"Request a quote\",\n        body: \"\"\n    }\n};\n\nexport default sections;","import React from 'react';\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport ScrollAnimation from 'react-animate-on-scroll'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './App.css'\n\n//hi\n\nclass ContactForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: ' ',\n            email: ' ',\n            message: ' '\n        }\n    }\n\n\n\n    handleSubmit(e){\n        e.preventDefault();\n\n         fetch('https://31mouf77ff.execute-api.us-east-1.amazonaws.com/prod/', {\n            method: \"POST\",\n            body: JSON.stringify(this.state),\n            headers: {\n                'Accept': \"application/json\",\n                'Content-Type': 'application/json',\n                'x-api-key': 'R80ARBeFIg3dJgXbs2Esk4WgGdgTk9PW3nYlq1Bb'\n            },\n        }).then(\n            (response) => {\n                alert(\"Message Sent.\");\n                this.resetForm()\n            /* (response) => console.log(response) */}\n        )\n\n        \n    }\n\n    alertSuccess(value){\n        return(\n                <Alert varient=\"Success\" show={true}>HI</Alert>\n            \n        )\n    }\n\n    resetForm(){\n        this.setState({name: ' ', email: ' ', message: ' '})\n    }\n\n    render() {\n        return (\n            <Jumbotron className=\"App-header jumbotron-2 p-text-blue\">\n            <Row>\n                <Col>\n                    <ScrollAnimation animateIn='animate__fadeInLeft'>\n                        <h1 className=\"center display-4 p-text-blue\" >\n                            Contact: \n                        </h1>\n                    </ScrollAnimation>\n                </Col>\n                <Col lg={true}>\n                    <ScrollAnimation animateIn=\"animate__fadeInRight\">\n        <Form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n            <Form.Group>\n                <Form.Row>\n                    <Form.Label htmlFor=\"inputName\">Name</Form.Label>\n                    <Form.Control  type=\"text\" id=\"inputName\" value={this.state.name} onChange={this.onNameChange.bind(this)}></Form.Control>\n                </Form.Row>\n            </Form.Group>\n            <Form.Group>\n                <Form.Row>\n                    <Form.Label htmlFor=\"inputEmail\">Email</Form.Label>\n                    <Form.Control  type=\"email\" id=\"inputEmail\" value={this.state.email} onChange={this.onEmailChange.bind(this)}></Form.Control>\n                </Form.Row>\n            </Form.Group>\n            <Form.Group>\n                <Form.Row>\n                    <Form.Label htmlFor=\"inputMessage\">Message</Form.Label>\n                    <Form.Control as=\"textarea\" id=\"inputMessage\" value={this.state.message} onChange={this.onMessageChange.bind(this)}></Form.Control>\n                </Form.Row>\n            </Form.Group>\n            <Form.Row>\n            <Button className=\"submit-button\" type=\"submit\" size=\"lg\">Send</Button>\n            </Form.Row>\n        </Form>\n                    </ScrollAnimation>\n                </Col>\n            </Row>\n        </Jumbotron>\n        );\n    }\n\n    onNameChange(event) {\n        this.setState({name: event.target.value})\n    }\n\n    onEmailChange(event) {\n        this.setState({email: event.target.value})\n    }\n\n    onMessageChange(event){\n        this.setState({message: event.target.value})\n    }\n\n    \n\n\n\n}\n\n/* function ContactForm () {\n    return (\n        <Jumbotron className=\"App-header jumbotron-2 p-text-blue\">\n            <Row>\n                <Col>\n                    <ScrollAnimation animateIn='animate__fadeInLeft'>\n                        <h1 className=\"center display-4 p-text-blue\" >\n                            Contact: \n                        </h1>\n                    </ScrollAnimation>\n                </Col>\n                <Col lg={true}>\n                    <ScrollAnimation animateIn=\"animate__fadeInRight\">\n        <Form>\n            <Form.Group>\n                <Form.Row>\n                    <Form.Label htmlFor=\"inputName\">Name</Form.Label>\n                    <Form.Control  type=\"text\" id=\"inputName\" placeholder=\"j2Tech\"></Form.Control>\n                </Form.Row>\n            </Form.Group>\n            <Form.Group>\n                <Form.Row>\n                    <Form.Label htmlFor=\"inputEmail\">Email</Form.Label>\n                    <Form.Control  type=\"email\" id=\"inputEmail\" placeholder=\"j2tech@example.com\"></Form.Control>\n                </Form.Row>\n            </Form.Group>\n            <Form.Group>\n                <Form.Row>\n                    <Form.Label htmlFor=\"inputMessage\">Message</Form.Label>\n                    <Form.Control as=\"textarea\" id=\"inputMessage\" placeholder=\"What can I help you with?\"></Form.Control>\n                </Form.Row>\n            </Form.Group>\n            <Form.Row>\n            <Button className=\"submit-button\" type=\"submit\" size=\"lg\">Send</Button>\n            </Form.Row>\n        </Form>\n                    </ScrollAnimation>\n                </Col>\n            </Row>\n        </Jumbotron>\n    )\n} */\n\nexport default ContactForm;","import React from 'react';\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport ScrollAnimation from 'react-animate-on-scroll'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport sections from './data/sectionContent'\nimport ContactForm from './Form'\n\n\nconst BlueSection = ({title, body}) => {\n    return (\n        <Jumbotron className=\"App-header-2\" >\n            <ScrollAnimation animateIn='animate__fadeInDown'>\n            <h1 className=\"center display-4 \">\n                {title}\n            </h1>\n            </ScrollAnimation>\n            <ScrollAnimation animateIn=\"animate__fadeInUp\">\n            <p >\n                {body}\n            </p>\n            </ScrollAnimation>\n        </Jumbotron>\n    )\n}\n\nconst WhiteColSection = ({title, body}) => {\n    return (\n        <Jumbotron className=\"App-header jumbotron-2\">\n            <Row>\n                <Col>\n                    <ScrollAnimation animateIn='animate__fadeInLeft'>\n                        <h1 className=\"center display-4 p-text-blue\" >\n                            {title}\n                        </h1>\n                    </ScrollAnimation>\n                </Col>\n                <Col lg={true}>\n                    <ScrollAnimation animateIn=\"animate__fadeInRight\">\n                        <p className=\"p-text-blue\" align=\"left\">\n                            {body}\n                        </p>\n                    </ScrollAnimation>\n                </Col>\n            </Row>\n        </Jumbotron>\n    )\n}\n\nfunction Sections () {\n    return (\n        <>\n        <WhiteColSection title={sections.tagline.title} body={sections.tagline.body} />\n        <BlueSection title={sections.web.title} body={sections.web.body} />\n        <WhiteColSection title={sections.automation.title} body={sections.automation.body} />\n        <BlueSection title={sections.data.title} body={sections.data.body} />\n{/*         <QuoteSection title={sections.quote.title} /> */}\n        <ContactForm />\n        </>\n    )\n}\n\nexport default Sections;","import React from 'react';\nimport Header from './Header'\nimport Footer from './Footer'\nimport Sections from './Sections'\nimport \"animate.css\";\nimport './App.css'\n\n\nconst App = () => (\n <>\n  <Header />\n  <Sections />\n  <Footer />\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"animate.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}